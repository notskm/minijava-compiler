
const vmt_Tester
  :Tester.runTests
  :Tester.sum
  :Tester.testBranchWithLocalArg
  :Tester.testBranchWithIntLiteral
  :Tester.testSpilledParameter

func Main [in 0, out 0, local 0]
  $t0 = HeapAllocZ(12)
  [$t0] = :vmt_Tester
  if $t0 goto :null1
  Error("null pointer")
null1:
  $t1 = [$t0]
  $t1 = [$t1]
  $a0 = $t0
  call $t1
  $t1 = $v0
  PrintIntS($t1)
  ret

func Tester.runTests [in 0, out 0, local 3]
  local[0] = $s0
  local[1] = $s1
  local[2] = $s2
  $s0 = $a0
  $s1 = [$s0]
  $s1 = [$s1+8]
  $a0 = $s0
  call $s1
  $s2 = $v0
  PrintIntS($s2)
  $s1 = [$s0]
  $s1 = [$s1+12]
  $a0 = $s0
  $a1 = 0
  call $s1
  $s2 = $v0
  PrintIntS($s2)
  $s1 = [$s0]
  $s1 = [$s1+16]
  $a0 = $s0
  call $s1
  $s2 = $v0
  PrintIntS($s2)
  $v0 = 0
  $s0 = local[0]
  $s1 = local[1]
  $s2 = local[2]
  ret

func Tester.testBranchWithLocalArg [in 0, out 0, local 6]
  local[1] = 5
  local[0] = 4
  local[3] = 4
  local[2] = 5
  $t4 = 0
  $t5 = $t4
  $t6 = $t5
  $t7 = $t6
  $t8 = $t7
  $t1 = $t8
  $t0 = $t1
  $t3 = $t0
  $t2 = $t3
  local[4] = 8
  local[5] = 9
  PrintIntS($t4)
  PrintIntS($t5)
  PrintIntS($t6)
  PrintIntS($t7)
  PrintIntS($t8)
  PrintIntS($t1)
  PrintIntS($t0)
  PrintIntS($t3)
  PrintIntS($t2)
  $v0 = local[4]
  if0 $v0 goto :if1_else
  goto :if1_end
if1_else:
  $v0 = local[4]
  PrintIntS($v0)
  $v0 = local[4]
  $v1 = local[5]
  $v0 = Add($v0 $v1)
if1_end:
  $v0 = local[3]
  $v1 = local[2]
  $t2 = Add($v0 $v1)
  PrintIntS($t2)
  $v0 = local[1]
  PrintIntS($v0)
  $v0 = local[0]
  PrintIntS($v0)
  $v1 = local[0]
  local[1] = $v1
  $v0 = local[1]
  PrintIntS($v0)
  $v0 = local[0]
  PrintIntS($v0)
  $v0 = local[4]
  ret

func Tester.testBranchWithIntLiteral [in 0, out 0, local 0]
  $t0 = $a1
  if0 0 goto :if2_else
  $t0 = 5
  goto :if2_end
if2_else:
  $t0 = 1
if2_end:
  $v0 = $t0
  ret

func Tester.testSpilledParameter [in 0, out 4, local 1]
  $t0 = $a0
  local[0] = 10
  $t2 = local[0]
  $t3 = $t2
  $t4 = $t3
  $t5 = $t4
  $t6 = $t5
  $t7 = $t6
  $t8 = $t7
  $t1 = $t8
  $v0 = local[0]
  PrintIntS($v0)
  PrintIntS($t2)
  PrintIntS($t3)
  PrintIntS($t4)
  PrintIntS($t5)
  PrintIntS($t6)
  PrintIntS($t7)
  PrintIntS($t8)
  PrintIntS($t1)
  local[0] = 5
  $t1 = [$t0]
  $t1 = [$t1+4]
  $a0 = $t0
  $a1 = 1
  $a2 = 2
  $a3 = 3
  out[0] = 4
  out[1] = 5
  out[2] = 6
  $v1 = local[0]
  out[3] = $v1
  call $t1
  $t1 = $v0
  $v0 = $t1
  ret

func Tester.sum [in 4, out 0, local 0]
  $t0 = $a1
  $t1 = $a2
  $t2 = $a3
  $t3 = in[0]
  $t4 = in[1]
  $t5 = in[2]
  $t6 = in[3]
  $t1 = Add($t0 $t1)
  $t1 = Add($t1 $t2)
  $t1 = Add($t1 $t3)
  $t1 = Add($t1 $t4)
  $t1 = Add($t1 $t5)
  $t1 = Add($t1 $t6)
  $v0 = $t1
  ret
